version: '3.9'

services:
  bot:
    container_name: onson-bot
    build:
      dockerfile: Dockerfile.bot
      context: .
    working_dir: "/app/"
    volumes:
      - .:/app/
    command: python manage.py runbot
    restart: always
    depends_on:
      - db
      - web
    env_file: .env

  web:
    container_name: onson-web
    build:
      dockerfile: Dockerfile.web
      context: .
    working_dir: "/app/"
    volumes:
      - .:/app/
    command: python manage.py runserver 0.0.0.0:8000
    expose:
      - 8000:8000
    restart: always
    depends_on:
      - db
    env_file: .env

  db:
    image: postgis/postgis:latest
    volumes:
      - './postgres_data:/var/lib/postgresql/data'
    restart: always
    container_name: onson-db
    env_file: .env

  redis:
    container_name: onson-redis
    image: redis:7.2-rc3-alpine
    restart: always
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    expose:
      - ${REDIS_PORT}
    volumes:
      - ./redis_data:/data
    
  nginx:
    container_name: onson-nginx
    build: ./nginx
    ports:
      - "8000:8000"
    volumes:
      - ./static:/app/static # Static value
      - ./media:/app/media # Media value
    depends_on:
      - web
